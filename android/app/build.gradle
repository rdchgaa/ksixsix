def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.habeesjobs.message"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }
    signingConfigs {
        release {
            keyAlias 'habeesjoba'
            keyPassword 'bs9dqec6E8Z6'
            storeFile file('../key/keys.jks')
            storePassword 'bs9dqec6E8Z6'
        }
        profile {
            keyAlias 'chatmekey'
            keyPassword 'aB3dfeaE8gr9d'
            storeFile file('../key/keys.jks')
            storePassword 'aB3dfeaE8gr9d'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//            shrinkResources false //删除无用资源

            signingConfig signingConfigs.release
            manifestPlaceholders = [
                    APP_NAME: "Chat Me",
            ]
        }

        profile {
            signingConfig signingConfigs.profile
            applicationIdSuffix ".profile"
            manifestPlaceholders = [
                    APP_NAME: "Chat Me测试",
            ]
        }

        debug {
            signingConfig signingConfigs.debug
            applicationIdSuffix ".debug"
            manifestPlaceholders = [
                    APP_NAME: "Chat Me开发",
            ]
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    lintOptions {
        checkReleaseBuilds false
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation fileTree(includes: ['*.aar'], dir: "libs")
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'io.github.happylishang:antifake:1.7.0' //模拟器检测库
    implementation "com.qihoo360.replugin:replugin-plugin-lib:${RP_VERSION}"
}
